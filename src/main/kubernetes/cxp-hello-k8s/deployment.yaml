apiVersion: apps/v1
kind: Deployment
metadata:
  name: cxp-hello-k8s
  labels:
    app.kubernetes.io/name: cxp-hello-k8s
    app.kubernetes.io/instance: cxp-hello-k8s
    app.kubernetes.io/version: "${project.version}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: cxp
    app.kubernetes.io/managed-by: kubectl
spec:
  # replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cxp-hello-k8s
      app.kubernetes.io/instance: cxp-hello-k8s
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cxp-hello-k8s
        app.kubernetes.io/instance: cxp-hello-k8s
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      serviceAccountName: cxp-hello-k8s
      containers:
        - name: cxp-hello-k8s
          image: "docker.at41tools.k8s.aws.msgoat.eu/cxp/cxp-hello-k8s:${project.version}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: cloud
            - name: CNAP_CLOUD
              value: kubernetes
          securityContext:
            allowPrivilegeEscalation: false